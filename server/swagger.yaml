swagger: '2.0'
info:
  description: Mergin API to synchronize your GIS data.
  version: '0.6'
  title: Mergin API
basePath: /v1
tags:
  - name: project
    description: Mergin project
schemes:
  - https
  - http

definitions:
  Project:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: mergin
      created:
        type: string
        format: date-time
        example: '2018-11-30T08:47:58.636074Z'
  FileInfo:
    type: object
    required:
      - path
      - size
      - checksum
    properties:
      path:
        type: string
        example: media/favicon.ico
      checksum:
        description: sha1 hash
        type: string
        example: '9adb76bf81a34880209040ffe5ee262a090b62ab'
      # will be removed in future
      mtime:
        type: string
        format: date-time
        example: '2018-11-30T08:47:58.636074Z'
      size:
        type: integer
        format: int64
        example: 1024
  HistoryFileInfo:
    type: object
    properties:
      path:
        type: string
        example: data/survey.gpkg
      checksum:
        description: sha1 hash
        type: string
        example: '9adb76bf81a34880209040ffe5ee262a090b62ab'
      mtime:
        type: string
        format: date-time
        example: '2019-01-30T08:47:58.636074Z'
      size:
        type: integer
        format: int64
        example: 102450086
      history:
        type: object
        additionalProperties:
          type: object
          $ref: '#/definitions/UpdateFileInfo'
  UploadFileInfo:
      allOf:
        - $ref: '#/definitions/FileInfo'
        - type: object
          properties:
            chunks:
              type: array
              items:
                type: string
                example: "d17a60eb-6581-431c-adfc-3451231455bb"
  UpdateFileInfo:
    allOf:
      - $ref: '#/definitions/UploadFileInfo'
      - type: object
        properties:
          diff:
            type: object
            required:
              - path
              - checksum
            properties:
              path:
                type: string
                description: unique diff filename
                example: 'survey.gpkg-diff-15eqn2q'
              checksum:
                type: string
                example: '45dfdfbf81a34asdf209040ffe5fasdf2a090bfa'
              size:
                type: integer
                example: 512
  ProjectListItem:
    allOf:
      - $ref: '#/definitions/Project'
      - type: object
        properties:
          name:
            type: string
            example: mergin
          namespace:
            type: string
            example: mergin
          creator:
            type: integer
            example: 1
            description: project creator ID
          disk_usage:
            type: integer
            example: 25324373
            description: project size in bytes
          permissions:
            type: object
            properties:
              delete:
                type: boolean
                example: false
              update:
                type: boolean
                example: false
              upload:
                type: boolean
                example: true
          tags:
            type: array
            items:
              $ref: '#/definitions/MerginTag'
          updated:
            type: string
            format: date-time
            example: '2018-11-30T08:47:58.636074Z'
            description: last modified
          version:
            type: string
            example: 'v2'
            description: last project version
          uploads:
            type: array
            items:
              type: string
              example: "669b838e-a30b-4338-b2b6-3da144742a82"
              description: uuid for ongoing upload
          access:
            $ref: '#/definitions/Access'
  ProjectDetail:
    allOf:
      - $ref: '#/definitions/ProjectListItem'
      - type: object
        properties:
          files:
            type: array
            items:
              allOf:
                - $ref: '#/definitions/FileInfo'
                - $ref: '#/definitions/HistoryFileInfo'
  MerginTag:
    type: string
    enum: &MERGIN_TAG
      - valid_qgis
      - mappin_use
      - input_use
  PaginatedProjects:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/ProjectListItem'
      count:
        type: integer
  Access:
    type: object
    properties:
      owners:
        type: array
        items:
          type: integer
        example: []
      writers:
        type: array
        items:
          type: integer
        example: []
      readers:
        type: array
        items:
          type: integer
      ownersnames:
        type: array
        items:
          type: string
        example: []
      writersnames:
        type: array
        items:
          type: string
        example: []
      readersnames:
        type: array
        items:
          type: string
        example: []
      public:
        type: boolean
        example: true
  ProjectVersion:
    type: object
    properties:
      name:
        type: string
        example: 'v_1'
      author:
        type: string
        example: 'mergin'
      created:
        type: string
        format: date-time
        example: '2018-11-30T08:47:58.636074Z'
      changes:
        type: object
        properties:
          added:
            type: array
            items:
              type: string
              example: media/favicon.ico
          removed:
            type: array
            items:
              type: string
            example: []
          updated:
            type: array
            items:
              type: string
            example: []
          renamed:
            type: array
            items:
              type: string
            example: []
      project:
        type: object
        properties:
          name:
            type: string
            example: 'test'
          namespace:
            type: string
            example: 'mergin'
      user_agent:
        type: string
        example: 'Python-client/0.5.3 Plugin/2020.5.2 QGIS/3.14.0 (Linux/Ubuntu)'
      changesets:
        type: object
        additionalProperties:
          type: object
          properties:
            sumamary:
              type: object
            size:
              type: integer
  UserDetail:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      username:
        type: string
        example: 'johnny'
      disk_usage:
        type: integer
        format: int64
        example: 64052
      storage_limit:
        type: integer
        format: int64
        example: 104857600

  LoginResponse:
    allOf:
      - $ref: '#/definitions/UserDetail'
      - type: object
        properties:
          token:
            type: string
            example: '.eJyrVkrNTczMUbJSyk0sSk7NccgpLSlKTM7PKy7NKcnMS9dLztcrzVbSUSotTi2Kz0xRsjKCsPMSc1PhupRqAbKNGXw.XMvndw.XeJ1F7ch2zQvNVEz_zvIPgj4iWY'
          exipre:
            type: string
            format: date-time
            example: '2019-05-04T14:21:56.695035Z'
  GeodiffChangeset:
    type: object
    properties:
      changes:
        type: array
        items:
          type: object
          properties:
            column:
             type: integer
            new:
              type: string
            old:
              type: string
          example:
            column: 1
            new: 'Point (-0.5031055901 0.1639751553)'
            old: 'null'
      table:
        type: string
        example: trees
      type:
        type: string
        example: 'insert'
paths:
  /project/paginated:
    get:
      tags:
        - project
      summary: List mergin projects.
      description: Returns limited list of projects, optionally filtered by tags, search query, username.
      operationId: get_paginated_projects
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number
          required: true
          type: integer
          format: int64
        - name: order_params
          in: query
          description: sorting fields e.g. name_asc,updated_desc
          required: false
          type: string
        - name: order_by
          in: query
          description: order by field
          required: false
          type: string
        - name: descending
          in: query
          description: order of sorting
          required: false
          type: boolean
        - name: per_page
          in: query
          description: number of results per page
          required: true
          type: integer
          maximum: 100
          format: int64
        - name: namespace
          in: query
          description: filter projects with namespaces like a namespace
          required: false
          type: string
        - name: only_namespace
          in: query
          description: Filter namespace equality to in contrast with namespace attribute which is determinated to search (like)
          required: false
          type: string
        - name: name
          in: query
          description: filter projects with names like a name or namespaces like a name
          required: false
          type: string
        - name: user
          in: query
          description: Username for 'flag' filter. If not provided, it means user executing request.
          required: false
          type: string
        - name: last_updated_in
          in: query
          description: for filter projects by days from last update
          required: false
          type: integer
        - name: flag
          in: query
          description: Predefined filter flag.
          required: false
          type: string
          enum:
            - created
            - shared
        - name: as_admin
          in: query
          description: User access as admin
          required: false
          type: boolean
        - name: public
          in: query
          description: should return any public project
          required: false
          type: boolean
        - name: only_public
          in: query
          description: should return only public projects
          required: false
          type: boolean
      responses:
        '200':
          description: Success.
          schema:
            type: object
            $ref: '#/definitions/PaginatedProjects'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  /project:
    get:
      tags:
        - project
      summary: List mergin projects.
      description: Returns limited list of projects, optionally filtered by tags, search query, username.
      operationId: get_projects
      produces:
        - application/json
      parameters:
        - name: tags
          in: query
          description: Filter by mergin tags.
          required: false
          type: array
          items:
            type: string
            enum: *MERGIN_TAG
        - name: q
          in: query
          description: Search query string.
          required: false
          type: string
        - name: user
          in: query
          description: Username for 'flag' filter. If not provided, it means user executing request.
          required: false
          type: string
        - name: flag
          in: query
          description: Predefined filter flag.
          required: false
          type: string
          enum:
            - created
            - shared
        - name: limit
          in: query
          description: Maximum number of returned projects.
          required: false
          type: integer
          minimum: 1
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectListItem'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/{namespace}':
    post:
      tags:
        - project
      summary: Add a new mergin project.
      description: Add new project to database and create empty project directory. Project name is project dir at the same time.
      operationId: add_project
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - in: body
          name: project
          description: Project object that needs to be added to the database.
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                example: mergin
              public:
                type: boolean
                example: true
              template:
                type: string
                example: Template
      responses:
        '200':
          $ref: '#/responses/Success'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '405':
          description: Invalid input
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/{namespace}/{project_name}':
    get:
      tags:
        - project
      summary: Find project by name.
      description: Returns a single project of specified version with details about files including history for versioned files (diffs) if needed.
      operationId: get_project
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: Name of project to return.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: since
          in: query
          description: Version to look up diff files history from.
          required: false
          type: string
        - name: version
          in: query
          description: Project version.
          required: false
          type: string
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ProjectDetail'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
    put:
     tags:
       - project
     summary: Update an existing project.
     description: Updates 'public' flag and access list for project.
     operationId: update_project
     consumes:
       - application/json
     produces:
       - application/json
     parameters:
       - name: project_name
         in: path
         description: Name of project that need to be updated.
         required: true
         type: string
       - name: namespace
         in: path
         description: Namespace for project to look into.
         required: true
         type: string
       - in: body
         name: data
         description: Data to be updated.
         required: true
         schema:
           type: object
           properties:
             access:
               type: object
               $ref: '#/definitions/Access'
     responses:
       '200':
         $ref: '#/responses/Success'
       '400':
         $ref: '#/responses/BadStatusResp'
       '403':
         $ref: '#/responses/Forbidden'
       '404':
         $ref: '#/responses/NotFoundResp'
       '405':
         description: Validation exception.
     x-swagger-router-controller: src.controllers.project_controller
    delete:
      tags:
        - project
      summary: Delete a project.
      description: Remove project from database and project directory with all files.
      operationId: delete_project
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: Name of project to delete.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/by_names':
    post:
      tags:
        - project
      summary: Find projects by name.
      description: Returns list of requested projects
      operationId: get_projects_by_names
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: List of requested projects.
          required: false
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  type: string
            example:
              projects: [mergin_namespace/project_name]
      responses:
        '200':
          description: Success.
          schema:
            type: object
            additionalProperties:
                type: object
                $ref: '#/definitions/ProjectListItem'
        '400':
          $ref: '#/responses/BadStatusResp'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/by_uuids':
    get:
      tags:
        - project
      summary: Find projects by ids.
      description: Returns list of requested projects
      operationId: get_projects_by_uuids
      produces:
        - application/json
      parameters:
        - in: query
          name: uuids
          description: List of requested projects uuids.
          required: true
          type: string
      responses:
        '200':
          description: Success.
          schema:
            type: object
            additionalProperties:
              type: object
              $ref: '#/definitions/ProjectListItem'
        '400':
          $ref: '#/responses/BadStatusResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/version/{namespace}/{project_name}':
    get:
      tags:
        - project
      summary: Get versions (history) of project.
      description: Returns a list of project versions with changes information.
      operationId: get_project_versions
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: Name of project to return versions for.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: version_id
          in: query
          required: false
          type: string
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectVersion'
        '400':
          $ref: '#/responses/BadStatusResp'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/download/{namespace}/{project_name}':
    get:
      tags:
        - project
      summary: Download dir for single project.
      description: Download whole project folder as zip file or produces stream to parse.
      operationId: download_project
      produces:
        - application/zip
        - multipart/form-data
      parameters:
        - name: project_name
          in: path
          description: Name of project to download.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: format
          in: query
          description: Output format (only zip available).
          required: false
          type: string
          enum:
            - zip
        - name: version
          in: query
          description: Version tag.
          required: false
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/project/raw/{namespace}/{project_name}':
    get:
      tags:
        - project
      summary: Download project file
      description: Download individual file or it's diff file from project.
      operationId: download_project_file
      produces:
        - application/octet-stream
      parameters:
        - name: project_name
          in: path
          description: Project name.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: file
          in: query
          description: Path to file.
          required: true
          type: string
        - name: version
          in: query
          description: Version tag.
          required: false
          type: string
        - name: diff
          in: query
          description: Ask for diff file instead of full one.
          required: false
          type: boolean
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  /project/push/{namespace}/{project_name}:
    post:
      tags:
       - project
      summary: Synchronize project data.
      description: Apply changes in project if no uploads required. Creates upload transaction for added/modified files.
      operationId: project_push
      consumes:
       - application/json
      produces:
       - application/json
      parameters:
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: project_name
          in: path
          description: Project name.
          required: true
          type: string
        - in: body
          name: data
          required: true
          description: Description of project changes.
          schema:
            type: object
            required:
              - version
              - changes
            properties:
              version:
                type: string
                example: v1
              changes:
                type: object
                required:
                  - added
                  - updated
                  - renamed
                  - removed
                properties:
                  added:
                    type: array
                    items:
                      $ref: '#/definitions/UploadFileInfo'
                  updated:
                    type: array
                    items:
                      $ref: '#/definitions/UpdateFileInfo'
                  renamed:
                    type: array
                    items:
                      $ref: '#/definitions/FileInfo'
                  removed:
                    type: array
                    items:
                      $ref: '#/definitions/FileInfo'
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  /project/clone/{namespace}/{project_name}:
    post:
      tags:
       - project
      summary: Clone project.
      description: Clone project to another namespace. Only recent version is copied over and history is lost. Destination namespace and project name are optionally set in query parameters othewise request user is used with the same project name as cloned project.
      operationId: clone_project
      consumes:
        - application/json
      parameters:
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: project_name
          in: path
          description: Project name.
          required: true
          type: string
        - in: body
          name: destination
          description: Destination (namespace and project name) where project should be cloned.
          required: false
          schema:
            type: object
            properties:
              namespace:
                type: string
                example: mergin
              project:
                type: string
                example: mergin
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller

  #not implemented in connexion, going directly to flask endpoint
#  /project/push/chunk/{transaction_id}/{chunk_id}:
#    post:
#      tags:
#         - project
#      summary: Upload file chunk as defined in upload transaction.
#      operationId: chunk_upload
#      consumes:
#        - application/octet-stream
#      produces:
#        - application/json
#      parameters:
#        - name: transaction_id
#          in: path
#          description: Transaction id.
#          required: true
#          type: string
#        - name: chunk_id
#          in: path
#          description: Chunk id.
#          required: true
#          type: string
#      responses:
#        '200':
#          $ref: '#/responses/Success'
#        '400':
#          $ref: '#/responses/BadStatusResp'
#        '401':
#          $ref: '#/responses/UnauthorizedError'
#        '403':
#          $ref: '#/responses/Forbidden'
#        '404':
#          $ref: '#/responses/NotFoundResp'
#      x-swagger-router-controller: src.controllers.project_controller

  /project/push/finish/{transaction_id}:
    post:
      tags:
       - project
      summary: Finalize project data upload.
      operationId: push_finish
      parameters:
        - name: transaction_id
          in: path
          description: Transaction id.
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  /project/push/cancel/{transaction_id}:
    post:
      tags:
       - project
      summary: Cancel upload transaction.
      operationId: push_cancel
      parameters:
        - name: transaction_id
          in: path
          description: Transaction id.
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_controller
  /project/transfer/{namespace}:
    get:
      tags:
        - Project transfers for namespace
      summary: List of incoming/outcoming project transfers for namespace.
      operationId: get_project_transfers
      produces:
        - application/json
      parameters:
        - name: namespace
          in: path
          description: mergin namespace to filter transfers for
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '403':
          $ref: '#/responses/Forbidden'
      x-swagger-router-controller: src.controllers.project_transfer_controller
  /project/transfer/{namespace}/{project_name}:
    post:
      tags:
        - project transfer
      summary: Transfer project.
      description: Transfer project to another namespace.
      operationId: request_transfer
      consumes:
        - application/json
      parameters:
        - name: namespace
          in: path
          description: Namespace for project to look into.
          required: true
          type: string
        - name: project_name
          in: path
          description: Project name.
          required: true
          type: string
        - in: body
          name: data
          description: Request payload - destination namespace.
          required: true
          schema:
            type: object
            properties:
              namespace:
                type: string
                example: mergin
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_transfer_controller
  /project/transfer/{id}:
    post:
      tags:
        - project transfer
      summary: Execute transfer project.
      description: Execute transfer project
      operationId: execute_transfer_project
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of transfer project data.
          required: true
          type: string
        - in: body
          name: data
          description: Destination project name and whether to keep permissions.
          required: false
          schema:
            type: object
            properties:
              name:
                type: string
                example: mergin
              transfer_permission:
                type: boolean
                example: True
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_transfer_controller
    delete:
      tags:
        - project transfer
      summary: Delete transfer project.
      description: Remove transfer project from database.
      operationId: delete_transfer_project
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of transfer project data.
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.project_transfer_controller

  /user/{username}:
    get:
      deprecated: true
      tags:
        - user
      summary: User profile info.
      description: Returns user profile info.
      operationId: get_user
      parameters:
        - name: username
          in: path
          description: Username.
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success.
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
      x-swagger-router-controller: src.controllers.user_controller
  /auth/login:
    post:
      deprecated: true
      tags:
        - login
      summary: Login user.
      description: Returns session token, expiration time and user profile info.
      operationId: login
      parameters:
        - name: credentials
          in: body
          description: User credentials.
          required: true
          schema:
            type: object
            required:
              - login
              - password
            properties:
              login:
                type: string
                example: johnny
              password:
                type: string
                example: pass123
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '415':
          $ref: '#/responses/UnsupportedMediaType'
      x-swagger-router-controller: src.controllers.user_controller
  /resource/history/{namespace}/{project_name}:
    get:
      tags:
        - resource
      summary: History of project resource (file)
      description: Lookup in project versions to get history of changes for particular file
      operationId: get_resource_history
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: Project name.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace project belong to.
          required: true
          type: string
        - name: path
          in: query
          description: Path to file in project.
          required: true
          type: string
      responses:
        '200':
          $ref: '#/responses/Success'
          #$ref: '#/definitions/HistoryFileInfo' need upgrade to OpenAPI v3?
        '400':
          $ref: '#/responses/BadStatusResp'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  /resource/changesets/{namespace}/{project_name}/{version_id}:
    get:
      tags:
        - resource
      summary: Changeset of the resource (file)
      description: Calculate geodiff changeset for particular file and particular project version
      operationId: get_resource_changeset
      produces:
        - application/json
      parameters:
        - name: project_name
          in: path
          description: Project name.
          required: true
          type: string
        - name: namespace
          in: path
          description: Namespace project belong to.
          required: true
          type: string
        - name: version_id
          in: path
          description: Version id of the file.
          required: true
          type: string
        - name: path
          in: query
          description: Path to file in project.
          required: true
          type: string
      responses:
        '200':
          description: A list of geodiff changesets for versioned file
          schema:
            type: array
            items:
              $ref: '#/definitions/GeodiffChangeset'
        '400':
          $ref: '#/responses/BadStatusResp'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.project_controller
  '/namespaces/{namespace_type}':
    get:
      tags:
        - namespace
      summary: Find namespace by query.
      description: Returns list of namespaces.
      operationId: search_namespace
      produces:
        - application/json
      parameters:
        - name: namespace_type
          in: path
          description: Type of namespace (organisation or user)
          required: true
          type: string
          enum:
            - user
            - organisation
        - name: q
          in: query
          description: Search query string.
          required: false
          type: string
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/responses/Success'
        '400':
          $ref: '#/responses/BadStatusResp'
        '401':
          $ref: '#/responses/UnauthorizedError'
        '404':
          $ref: '#/responses/NotFoundResp'
        '422':
          $ref: '#/responses/InvalidDataResp'
      x-swagger-router-controller: src.controllers.namespace_controller
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid.
    headers:
      WWW_Authenticate:
        type: string
  NotFoundResp:
    description: Project not found.
  BadStatusResp:
    description: Invalid request.
  InvalidDataResp:
    description: Invalid/unprocessable data.
  Success:
    description: Success.
  Forbidden:
    description: Access is denied.
  UnsupportedMediaType:
    description: Payload format is in an unsupported format.
